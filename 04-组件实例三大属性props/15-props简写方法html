<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>

<body>
  <!-- 三个盒子 -->
  <div class="test1"></div>
  <div class="test2"></div>
  <div class="test3"></div>

  <!-- react底层逻辑 -->
  <script type="text/javascript" src="../js/react.development.js"></script>
  <!-- 支持react控制DOM -->
  <script type="text/javascript" src="../js/react-dom.development.js"></script>
  <!-- 把jsx转换为js -->
  <script type="text/javascript" src="../js/babel.min.js"></script>
  <!-- 对props进行限制 -->
  <script type="text/javascript" src="../js/prop-types.js"></script>

  <script type="text/babel">
    // 创建类式组件
    class Person extends React.Component {
      // 限制标签属性的类型和必要性
      static propTypes = {
        name: PropTypes.string.isRequired,
        gender: PropTypes.string,
        age: PropTypes.number,
        speak: PropTypes.func,
      }

      // 设置标签属性默认值
      static defaultProps = {
        gender: '男',
        age: 25
      }

      render() {
        const { name, gender, age } = this.props
        return (
          <ul>
            <li>姓名：{name}</li>
            <li>性别：{gender}</li>
            <li>年龄：{age + 1}</li>
          </ul>
        )
      }
    }

    function speak() {
      console.log('说话')
    }
    // 渲染到页面
    ReactDOM.render(<Person name="Tom" gender="男" age={18} speak={speak} />, document.querySelector('.test1'))
    ReactDOM.render(<Person name="Jack" gender="男" age={19} />, document.querySelector('.test2'))
    const p = { name: 'Jenny', gender: '女', age: 20 }
    ReactDOM.render(<Person {...p} />, document.querySelector('.test3'))
  </script>
</body>

</html>